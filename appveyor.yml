version: '{branch}-{build}'
branches:
  only:
  - master
build: off
deploy: off
clone_depth: 2
environment:
  scoop: C:\projects\scoop
  scoop_home: C:\projects\scoop
  matrix:
    - PowerShell: 5
    - PowerShell: 6
cache:
  - '%USERPROFILE%\Documents\WindowsPowerShell\Modules -> appveyor.yml'
init:
  - ps: (Get-PSProvider 'FileSystem').Home = 'C:\projects\'
  - ps: if(!(Test-Path "$env:SCOOP")) { git clone -q --depth=1 "https://github.com/lukesampson/scoop" "$env:SCOOP" }
matrix:
  fast_finish: true
for:
- matrix:
    only:
      - PowerShell: 5
  install:
    - ps: . "$env:SCOOP_HOME\test\bin\init.ps1"
  test_script:
    - ps: . "$env:SCOOP_HOME\test\bin\test.ps1" -TestPath "$env:APPVEYOR_BUILD_FOLDER"
- matrix:
    only:
      - PowerShell: 6
  install:
    - pwsh: . "$env:SCOOP_HOME\test\bin\init.ps1"
  test_script:
    - pwsh: . "$env:SCOOP_HOME\test\bin\test.ps1" -TestPath "$env:APPVEYOR_BUILD_FOLDER"


install:
  - ps: iex (new-object net.webclient).downloadstring('https://get.scoop.sh')
  - ps: .\test\bin\init.ps1
test_script:
  - ps: $result = invoke-pester -path test/ -outputfile TestResults.xml -outputformat NUnitXML -passthru; $env:failedcount = $result.failedcount
  - ps: (new-object net.webclient).uploadfile("https://ci.appveyor.com/api/testresults/nunit/$($env:APPVEYOR_JOB_ID)", (resolve-path ./TestResults.xml))
  - ps: if($env:failedcount -gt 0) { exit $env:failedcount }
